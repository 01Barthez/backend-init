services:
  # Prometheus : Collecte les métriques
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.rules:/etc/prometheus/alerts.rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - backend_network

  # Loki : Stockage des logs
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    ports:
      - '3100:3100'
    networks:
      - backend_network

  # Grafana : Visualisation
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - '3001:3000' # Évite le conflit avec ton backend (port 3000)
    networks:
      - backend_network
    depends_on:
      - prometheus
      - loki

  # Alertmanager : Gestion des alertes
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - '9093:9093'
    networks:
      - backend_network
    depends_on:
      - prometheus

  # Node Exporter : Métriques système (optionnel)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - '9100:9100'
    networks:
      - backend_network

  mongodb-exporter:
    image: percona/mongodb_exporter:0.39
    container_name: mongodb-exporter
    restart: unless-stopped
    environment:
      MONGODB_URI: 'mongodb://admin:secret123@mongo:27017/appDB?authSource=admin'
    ports:
      - '9216:9216'
    networks:
      - backend_network

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: 'redis:6379'
    ports:
      - '9121:9121'
    networks:
      - backend_network

volumes:
  prometheus_data:
  loki_data:
  grafana_data:

networks:
  backend_network:
    external: true
    name: backend_backend_network
