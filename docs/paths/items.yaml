# Items Endpoints
/items:
  get:
    tags:
      - Items
    summary: Get all items
    description: Retrieve a paginated list of items with optional filtering and sorting
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/page.yaml'
      - $ref: '../components/parameters/limit.yaml'
      - $ref: '../components/parameters/sortBy.yaml'
      - $ref: '../components/parameters/order.yaml'
      - in: query
        name: category
        schema:
          type: string
        description: Filter items by category
      - in: query
        name: search
        schema:
          type: string
        description: Search term to filter items by name or description
    responses:
      '200':
        description: A list of items
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: true
                data:
                  type: array
                  items:
                    $ref: '../components/schemas/Item.yaml'
                pagination:
                  $ref: '../components/schemas/Pagination.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '500':
        $ref: '../components/responses/ServerError.yaml'

  post:
    tags:
      - Items
    summary: Create a new item
    description: Create a new item (Admin only)
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/Item.yaml'
    responses:
      '201':
        description: Item created successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/SuccessResponse.yaml'
              properties:
                data:
                  $ref: '../components/schemas/Item.yaml'
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '500':
        $ref: '../components/responses/ServerError.yaml'

  delete:
    tags:
      - Items
    summary: Delete all items
    description: Delete all items (Admin only)
    security:
      - bearerAuth: []
    responses:
      '200':
        description: All items deleted successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/SuccessResponse.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '500':
        $ref: '../components/responses/ServerError.yaml'

/items/{id}:
  get:
    tags:
      - Items
    summary: Get item by ID
    description: Retrieve a single item by its ID
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/id.yaml'
    responses:
      '200':
        description: Item details
        content:
          application/json:
            schema:
              $ref: '../components/responses/SuccessResponse.yaml'
              properties:
                data:
                  $ref: '../components/schemas/Item.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '500':
        $ref: '../components/responses/ServerError.yaml'

  put:
    tags:
      - Items
    summary: Update an item
    description: Update an existing item by ID (Admin only)
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/id.yaml'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/Item.yaml'
    responses:
      '200':
        description: Item updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/SuccessResponse.yaml'
              properties:
                data:
                  $ref: '../components/schemas/Item.yaml'
      '400':
        $ref: '../components/responses/BadRequest.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '500':
        $ref: '../components/responses/ServerError.yaml'

  delete:
    tags:
      - Items
    summary: Delete an item
    description: Delete an item by ID (Admin only)
    security:
      - bearerAuth: []
    parameters:
      - $ref: '../components/parameters/id.yaml'
    responses:
      '200':
        description: Item deleted successfully
        content:
          application/json:
            schema:
              $ref: '../components/responses/SuccessResponse.yaml'
      '401':
        $ref: '../components/responses/Unauthorized.yaml'
      '403':
        $ref: '../components/responses/Forbidden.yaml'
      '404':
        $ref: '../components/responses/NotFound.yaml'
      '500':
        $ref: '../components/responses/ServerError.yaml'
