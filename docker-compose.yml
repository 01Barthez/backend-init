services:
  backend:
    build: .
    container_name: backend
    env_file: .env
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      mailhog:
        condition: service_started
    environment:
      DATABASE_URL: "mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DB}?authSource=admin"
    ports:
      - "3000:3000"
    networks:
      - backend_network
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=3000"
      - "prometheus.path=/metrics"

  mongo:
    image: mongo:6.0-jammy
    container_name: mongo
    restart: always
    command: ["mongod", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 30s
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9216"
    
  redis:
    image: redis:8-alpine
    container_name: redis
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9121"

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9011:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9000"

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - backend_network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    depends_on:
      - backend
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend_network

volumes:
  mongo_data:
  minio_data:

networks:
  backend_network:
    driver: bridge
    attachable: true
